## This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build-box:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Build the project
    - script:
        name: go build
        code: |
          go build -o hello ./...
          echo "Buildbox!"
          pwd
          ls -l
          echo "in build pipeline" > $WERCKER_CACHE_DIR/pipelines.txt
          echo "cache dir is ${WERCKER_CACHE_DIR}"
          cp ./hello /pipeline/source
          
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Build the project
    - script:
        name: go build
        code: |
          go build -o hello ./...
          echo "Build plain!"
          echo "Env var DOLLARTEST is $DOLLARTEST"
          pwd
          ls -l
          echo "in build pipeline" > $WERCKER_CACHE_DIR/pipelines.txt
          echo "cache dir is ${WERCKER_CACHE_DIR}"
          cp ./hello /pipeline/source
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        working-dir: /pipeline/source
        cmd: ./hello
        tag: latest,$WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        repository: iad.ocir.io/odx-pipelines/spinnaker/demo_hellogo
        registry: https://iad.ocir.io/v2

          
deploy:
    box: golang:1.8

    steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        working-dir: /pipeline/source
        cmd: ./hello
        tag: latest,$WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        repository: iad.ocir.io/odx-pipelines/spinnaker/demo_hellogo
        registry: https://iad.ocir.io/v2
